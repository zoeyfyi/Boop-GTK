name: Release

on:
  push:
    branches: [release]
  pull_request:
    branches: [release]

env:
  CARGO_TERM_COLOR: always

jobs:
  release-linux-amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: 1.51.0
      # cache cargo
      - uses: actions/cache@v3.0.3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: GTK development librarys
        run: sudo apt-get update -y && sudo apt-get install -y libgtk-3-dev libgtksourceview-3.0-dev
      - name: build
        run: cargo build --release --all-features
      - name: rename output
        run: mv target/release/boop-gtk ./boop-gtk.linux.amd64
      - uses: actions/upload-artifact@v2.2.4
        with:
          name: boop-gtk.linux.amd64
          path: ./boop-gtk.linux.amd64

  release-snap:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - uses: snapcore/action-build@v1
        id: snapcraft
      - uses: snapcore/action-publish@v1.0.2
        if: github.event_name != 'pull_request'
        continue-on-error: true # don't fail if a manual review is required (etc)
        with:
          store_login: ${{ secrets.snapcraft_token }}
          snap: ${{ steps.snapcraft.outputs.snap }}
          release: stable
      - name: rename output
        run: mv ${{ steps.snapcraft.outputs.snap }} ./boop-gtk.snap
      - uses: actions/upload-artifact@v2.2.4
        with:
          name: boop-gtk.snap
          path: ./boop-gtk.snap

  release-flatpak:
    runs-on: ubuntu-latest
    container:
      image: docker.io/bilelmoussaoui/flatpak-github-actions
      options: --privileged
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Dependency (Python TOML)
        run: sudo dnf install -y python3-toml
      - name: Generate sources
        run: bash gen-sources.sh
      - uses: bilelmoussaoui/flatpak-github-actions@v3
        with:
          bundle: "boop-gtk.flatpak"
          manifest-path: "flatpak/fyi.zoey.Boop-GTK.json"
      - uses: actions/upload-artifact@v2.2.4
        with:
          name: boop-gtk.flatpak
          path: ./boop-gtk.flatpak

  release-cargo:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: 1.51.0
      # cache cargo
      - uses: actions/cache@v3.0.3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: GTK development librarys
        run: sudo apt-get update -y && sudo apt-get install -y libgtk-3-dev libgtksourceview-3.0-dev
      - name: cargo login
        if: github.event_name != 'pull_request'
        run: cargo login ${{ secrets.CRATES }}
      - name: cargo publish
        if: github.event_name != 'pull_request'
        run: cargo publish
      - name: cargo publish (dry run)
        if: github.event_name == 'pull_request'
        run: cargo publish --dry-run
      

  release:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' # don't do a release for pull requests into release, just upload artifacts to test
    needs:
      [
        release-linux-amd64,
        release-snap,
        release-flatpak,
      ]
    steps:
      # download artifacts
      - uses: actions/download-artifact@v2
        with:
          name: boop-gtk.linux.amd64
          path: ./
      - uses: actions/download-artifact@v2
        with:
          name: boop-gtk.snap
          path: ./
      - uses: actions/download-artifact@v2
        with:
          name: boop-gtk.flatpak
          path: ./
      # create a release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      # upload
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./boop-gtk.linux.amd64
          asset_name: boop-gtk.linux.amd64
          asset_content_type: application/octet-stream
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./boop-gtk.snap
          asset_name: boop-gtk.snap
          asset_content_type: application/octet-stream
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./boop-gtk.flatpak
          asset_name: boop-gtk.flatpak
          asset_content_type: application/octet-stream